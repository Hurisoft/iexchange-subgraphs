type Account @entity {
  id: Bytes! # address
  isSettler: Boolean!
  isTrader: Boolean!
  isMerchant: Boolean!
  isKYCAgent: Boolean!
  isAMLAgent: Boolean!
  isDao: Boolean!
  currenciesAdded: [Currency!]! @derivedFrom(field: "addedBy")
  currenciesRemoved: [Currency!]! @derivedFrom(field: "removedBy")
  tokensAdded: [P2PToken!]! @derivedFrom(field: "addedBy")
  tokensRemoved: [P2PToken!]! @derivedFrom(field: "removedBy")
  paymentsAdded: [PaymentMethod!]! @derivedFrom(field: "addedBy")
  paymentsRemoved: [PaymentMethod!]! @derivedFrom(field: "removedBy")
  torders: [Order!]! @derivedFrom(field: "trader")
  offers: [Offer!]! @derivedFrom(field: "merchant")
  appeals: [Appeal!]! @derivedFrom(field: "appealer")
  offerDeposits: [Offer!]! @derivedFrom(field: "depositAddress")
  orderDeposits: [Order!]! @derivedFrom(field: "depositAddress")
}

type P2PToken @entity {
  id: Bytes! # address
  addedBy: Account!
  removedBy: Account
  name: String!
  symbol: String!
  isTraded: Boolean!
  tokenOffers: [Offer!]! @derivedFrom(field: "token")
}

type Currency @entity {
  id: Bytes! # currency bytes
  addedBy: Account!
  removedBy: Account
  currency: String! # String
  isAccepted: Boolean!
  currencyOffers: [Offer!]! @derivedFrom(field: "currency")
}

type PaymentMethod @entity {
  id: Bytes! # method bytes
  addedBy: Account!
  removedBy: Account
  method: String! # String
  isAccepted: Boolean!
  offers: [Offer!]! @derivedFrom(field: "paymentMethod")
}

type Offer @entity {
  id: Bytes! # offerId
  token: P2PToken! # address
  currency: Currency! # String
  paymentMethod: PaymentMethod! # bytes32
  rate: BigInt! # uint256
  minOrder: BigInt! # uint256
  maxOrder: BigInt! # uint256
  active: Boolean! # bool
  merchant: Account! 
  accountHash: Bytes! # bytes32
  depositAddress: Account!
  orders: [Order!]! @derivedFrom(field: "offer")
}

type Order @entity {
  id: Bytes! # orderId
  offer: Offer!
  trader: Account!
  orderType: Int! # uint8
  quantity: BigInt! # uint256
  depositAddress: Account!
  accountHash: Bytes! # bytes32
  appeal: Appeal
  status: Int! # uint8
}

type Appeal @entity {
  id: Bytes! # appealId
  order: Order!
  appealer: Account!
  reasonHash: Bytes! # bytes32
  daoVote: Int! # uint8
  appealDecision: Int! # uint8
  currentSettler: Account
  settlerPickTime: BigInt
  rounds: [AppealRound!]! @derivedFrom(field: "appeal")
}

type AppealRound @entity {
  id: Bytes! # appealId + roundId
  appeal: Appeal!
  settler: Account!
  settled: Boolean!
  settlerVote: Int!
  merchantVote: Int!
  traderVote: Int!
}